whiteboard
==========

Collaborative Whiteboard

This software allows users to set up a server hosting several Windows Paint look-like "whiteboard", 
and spawn clients that can connect to said server simultaneously and draw on it. 

It also allows users to connect to a non-local server hosted by some other user of this same software.

To begin the server, run WhiteboardServer.java
To then begin a client, run WhiteboardGUI.java

All interaction with this software takes place in the GUI.  Upon opening the GUI, one can specify the IP Address and Port number of the server to connect to, and then click the "Connect" button to attempt to connect.  If this is a valid IP and Port, then the user will be connnected and prompted to enter a username, pick a board, join, and begin using their chosen interactive whiteboard!

Enjoy,

Austin Freel, Michael Handley, Johannes Norheim


WhiteboardModel: disconnectFromServer() was tested manually by:
					connecting to an instance of WhiteboardServer from another computer
					closing client window and ensuring that the correct message was sent by using a print statement
					ensuring that client was removed from usersbar of those connected
					ensuring that a new user could use that disconnected user's username
					
Manual Tests:
 - When the client connected to the server successfully:
 	- the correct WelcomeImage.bmp was loaded onto their canvas
 	- the GUI's BottumButtonBar was updated correctly, as specified in the design document
 	- the server accepted the client connection, and waited for user input (tested via print statements)
 - When the client entered a username and desired whiteboard and submitted this choice:
  	- the server received the correct "whiteboard ..." message (tested via print statements)
  	- in the case where the username was already in use by another client
  		- a "usernameTaken" message was generated by the server (again, via print statements)
  		- the client received that message
  		- the GUI's BottomButtonBar does not change
  		- the correct UsernameTakenImage.bmp was loaded onto their canvas
  		- this behaviour was repeatable after this stage (input of a taken username again produced the behaviour described above)
  		- connectedToWhiteboard remained false
  	- in the case where the username was unique
  		- a new Client object was added to the user's chosen whiteboard's clients list
  		- the WhiteboardServer's usernames list was updated with the new client's chosen username
  		- a new Thread of a ClientHandler instance was created
  		- connectedToWhiteboard was set to true
  		- the client's GUI's BottomButtonBar updates by removing the field for username input 
		- the client's GUI now displays the user's chosen whiteboard
 - Once the client was connected to a whiteboard successfully
  	- their name showed up in the usersBar at the right side of the GUI
  	- in the case of connected to an already populated whiteboad, the other users' usernames were also displayed
  	- when the client draws a line, WhiteboardModel gets a request to send a "line ... " message to the server