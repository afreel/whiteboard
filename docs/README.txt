whiteboard
==========

Collaborative Whiteboard

This software allows users to set up a server hosting several Windows Paint look-like "whiteboard", 
and spawn clients that can connect to said server simultaneously and draw on it. 

It also allows users to connect to a non-local server hosted by some other user of this same software.

To begin the server, run WhiteboardServer.java
To then begin a client, run WhiteboardGUI.java

All interaction with this software takes place in the GUI.  Upon opening the GUI, one can specify the IP Address and Port number of the server to connect to, and then click the "Connect" button to attempt to connect.  If this is a valid IP and Port, then the user will be connnected and prompted to enter a username, pick a board, join, and begin using their chosen interactive whiteboard!

Enjoy,

Austin Freel, Michael Handley, Johannes Norheim


WhiteboardModel: disconnectFromServer() was tested manually by:
					connecting to an instance of WhiteboardServer from another computer
					closing client window and ensuring that the correct message was sent by using a print statement
					ensuring that client was removed from usersbar of those connected
					ensuring that a new user could use that disconnected user's username
					
Manual Tests:
 o Where applicable, the below checks were performed using print statements
 - When the client connected to the server successfully:
 	- the correct WelcomeImage.bmp was loaded onto their canvas
 	- the GUI's BottumButtonBar was updated correctly, as specified in the design document
 	- the server accepted the client connection, and waited for user input (tested via print statements)
 - When the client entered a username and desired whiteboard and submitted this choice:
  	- the server received the correct "whiteboard ..." message (tested via print statements)
  	- in the case where the username was already in use by another client
  		- a "usernameTaken" message was generated by the server (again, via print statements)
  		- the client received that message
  		- the GUI's BottomButtonBar does not change
  		- the correct UsernameTakenImage.bmp was loaded onto their canvas
  		- this behaviour was repeatable after this stage (input of a taken username again produced the behaviour described above)
  		- connectedToWhiteboard remained false
  	- in the case where the username was unique
  		- a new Client object was added to the user's chosen whiteboard's clients list
  		- the WhiteboardServer's usernames list was updated with the new client's chosen username
  		- a new Thread of a ClientHandler instance was created
  		- connectedToWhiteboard was set to true
  		- the client's GUI's BottomButtonBar updates by removing the field for username input 
		- the client's GUI now displays the user's chosen whiteboard
 - Once the client was connected to a whiteboard successfully
  	- their name showed up in the usersBar at the right side of the GUI
  	- the image on the whiteboard's canvas was consistent with the whiteboard for other users
  		- first tested that when a user is the first to connect to a whiteboard, it is completely white
  		- next tested that when a user already exists on this whiteboard but has not drawn yet, it is still completely white
  		- next tested when an existing user has drawn on the whiteboard, the new user should see the drawing upon connecting
  		- the same test as above was then repeated for the case when the existing user switching boards or disconnects before
  		  the new user joined, in which case the new user should still see the drawing
  		- **key test** when the user is connecting and the canvas is being populated, user tries to draw a line
  			- to test this, we continuously drew on a board for several minutes to ensure it had a large history list;
  			  we then connected a new client and, while the board was being updated, had this client try to draw on the board;
  			  we observed that the board continued to draw and the new line was in fact drawn at the very end, which is what
  			  is expected
  		- **key test** when the user is connecting and the canvas is being populated, other users continue to draw
  			- to test this, we ensured an decent amount of lines had already been drawn on a specific board and then 
  			  had a new user connect; while the new user was connecting, we had other users continue to draw and observed
  			  that the new user still received the full image (both the history of the board and the new changes being made)
  		- we also tested combinations of the above tests, such as having both the new user and existing users drawing on a
  		  whiteboard while the new user is connecting, and found the images on all screens to be complete and consistent
  	- in the case of connected to an already populated whiteboad, the other users' usernames were also displayed
  		- also tested to ensure that they were displayed in the right colors, and that these colors were consistent
  	- when the client draws a line:
  		- WhiteboardModel gets a request to send a "line ... " message to the server
  		- WhiteboardServer receives a "line ... " message and stores it in the corresponding whiteboard's history list
  		- all clients connected to that specific whiteboard receive the same "line ... " message
  		- these clients (including the client that sent the message) draw the line on their respective GUIs
  			- observed that all these lines were drawn in the same location, with the same width and color
  			- also observed that all other local states stayed the same (i.e. did not change local client's color,
  			  line width, or cursor location upon drawing of new line)
  	- when the client selects a different whiteboard and attempts to connect to it:
  		- WhiteboardModel#connectToServer is called, with the correct boolean argument (usernameConfirmed == true)
  		- The Whiteboard menu on BottomButtonBar now shows new Whiteboard connected to
  		- Old canvas is covered with white, and new whiteboard canvas loads successfully
  		- List of users is updated correctly
  		- GUI looks identical to GUI of other users connected to same whiteboard
  		- Client can draw on this whiteboard, and it updates other connected users' GUIs appropriately
  		
  		
  		
  		